apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pvaddr
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath: # Use for local cluster like Minikube
    path: ./mysqlkube # Absolute path to ./mysql data on your host machine
---
# Define a 'Persistent Voulume Claim'(PVC) for Mysql Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvcaddr # name of PVC essential for identifying the storage data
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 5Gi    #This will tell kubernetes about the amount of space we are trying to claim.
---
# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqladdr
spec:
  replicas: 1
  selector: 
    matchLabels:
     app: mysqladdr
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysqladdr
    spec:
      containers:
        - image: mysql:8.3.0 # image from docker-hub
          name: mysqladdr
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: mysql
          ports:
            - containerPort: 3306
          volumeMounts:
          - name: mysql-addrdata 
            mountPath: /var/lib/mysql      
      volumes:
      - name: mysql-addrdata
        persistentVolumeClaim:
          claimName: mysql-pvcaddr
---
# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysqladdr  # DNS name
  labels:
    app: mysqladdr
spec:
  selector:       # mysql Pod Should contain same labels
    app: mysqladdr
  type: ClusterIP
  ports:
    - port: 3302
      targetPort: 3306